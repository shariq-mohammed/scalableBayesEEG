library(scalableBayesEEG)
?metropolis
x = 2
m = 0
s = 1
alpha = 1
metropolis(x, m, s, alpha)
x = 2
m = 0
s = 1
alpha = 1
metropolis(x, m, s, alpha)
x = 2
m = 0
s = 1
alpha = 1
metropolis(x, m, s, alpha)
x = 2
m = 0
s = 1
alpha = 1
metropolis(x, m, s, alpha)
x = 2
m = 0
s = 1
alpha = 1
metropolis(x, m, s, alpha)
x = 2
m = 0
s = 1
alpha = 1
metropolis(x, m, s, alpha)
x = 2
m = 0
s = 1
alpha = 1
metropolis(x, m, s, alpha)
x = 2
m = 0
s = 1
alpha = 1
metropolis(x, m, s, alpha)
library(scalableBayesEEG)
?spTempExact
library(scalableBayesEEG)
library(scalableBayesEEG)
library(scalableBayesEEG)
library(scalableBayesEEG)
?spTempApprox
library(scalableBayesEEG)
?spTempBayes
library(usethis)
load("~/Spring 2018/stSpikeSlabEEG/data/dist.mat_eeg.RData")
use_data(dist.mat_eeg, compress = 'xz')
load("~/Spring 2018/stSpikeSlabEEG/data/ind64to57_eeg.RData")
use_data(ind64to57_eeg, compress = 'xz')
load("~/Spring 2018/stSpikeSlabEEG/data/y_eeg.RData")
use_data(y_eeg, compress = 'xz')
load("~/Spring 2018/stSpikeSlabEEG/data/X_eeg.RData")
use_data(X_eeg, compress = 'xz')
library(scalableBayesEEG)
use_package('truncnorm')
use_package('mvtnorm')
?kmeans
?median
library(scalableBayesEEG)
?spTempBayes
dim(X_eeg)
y_eeg
sample.int(20, 122)
sample.int(20, size=122)
sample.int(122, size=20)
library(scalableBayesEEG)
library(scalableBayesEEG)
n = 20
inds = sample.int(122, size=n)
tau = 10
y = t(y_eeg[inds])
X = aperm(X_eeg[,ind64to57_eeg,], c(3,2,1))
# specify temporal covariance matrix
prior.temp = matrix(0, nrow = tau, ncol = tau)
for(t1 in 1:tau) for(t2 in t1:tau){
if(t1 == t2) prior.temp[t1,t1] = 2
if(t2 == t1+1) prior.temp[t1,t2] = prior.temp[t2,t1] = -1
if(t1 == 1 & t2 == 1) prior.temp[t1,t1] = 1
if(t1 == tau & t2 == tau) prior.temp[t1,t1] = 1
}
T.mat = prior.temp+diag(0.6,tau)
Temp.cov = cov2cor(chol2inv(chol(T.mat)))
# specify spatial covariance matrix
dmat = (dist.mat_eeg+t(dist.mat_eeg))/2
W.mat = exp(-(dmat^2)/0.1)
D.mat = diag(rowSums(W.mat)+0.6)
G.mat = D.mat-W.mat
Spat.cov = cov2cor(chol2inv(chol(G.mat))) # spatial covariance matrix
v0 = 0.005
a1 = 5
a2 = 15
q = 1
Nmcmc = 210
burnin = 10
X.test = NULL
type='approx'
library(scalableBayesEEG)
n = 20
inds = sample.int(122, size=n)
tau = 10
y = t(y_eeg[inds])
X = aperm(X_eeg[,ind64to57_eeg,], c(3,2,1))
# specify temporal covariance matrix
prior.temp = matrix(0, nrow = tau, ncol = tau)
for(t1 in 1:tau) for(t2 in t1:tau){
if(t1 == t2) prior.temp[t1,t1] = 2
if(t2 == t1+1) prior.temp[t1,t2] = prior.temp[t2,t1] = -1
if(t1 == 1 & t2 == 1) prior.temp[t1,t1] = 1
if(t1 == tau & t2 == tau) prior.temp[t1,t1] = 1
}
T.mat = prior.temp+diag(0.6,tau)
Temp.cov = cov2cor(chol2inv(chol(T.mat)))
# specify spatial covariance matrix
dmat = (dist.mat_eeg+t(dist.mat_eeg))/2
W.mat = exp(-(dmat^2)/0.1)
D.mat = diag(rowSums(W.mat)+0.6)
G.mat = D.mat-W.mat
Spat.cov = cov2cor(chol2inv(chol(G.mat))) # spatial covariance matrix
v0 = 0.005
a1 = 5
a2 = 15
q = 1
Nmcmc = 210
burnin = 10
X.test = NULL
type='approx'
res = spTempBayes(y, X, c_init = rep(1, tau), beta_init = NULL,
zeta_init = NULL, nusq_init = NULL, l_init = NULL,
prior.mu = 0, Spat.cov, Temp.cov, v0, a1, a2, q,
Nmcmc, burnin, X.test = NULL, type)
library(scalableBayesEEG)
n = 20
inds = sample.int(122, size=n)
tau = 10
y = t(y_eeg[inds])
X = aperm(X_eeg[,ind64to57_eeg,inds], c(3,2,1))
# specify temporal covariance matrix
prior.temp = matrix(0, nrow = tau, ncol = tau)
for(t1 in 1:tau) for(t2 in t1:tau){
if(t1 == t2) prior.temp[t1,t1] = 2
if(t2 == t1+1) prior.temp[t1,t2] = prior.temp[t2,t1] = -1
if(t1 == 1 & t2 == 1) prior.temp[t1,t1] = 1
if(t1 == tau & t2 == tau) prior.temp[t1,t1] = 1
}
T.mat = prior.temp+diag(0.6,tau)
Temp.cov = cov2cor(chol2inv(chol(T.mat)))
# specify spatial covariance matrix
dmat = (dist.mat_eeg+t(dist.mat_eeg))/2
W.mat = exp(-(dmat^2)/0.1)
D.mat = diag(rowSums(W.mat)+0.6)
G.mat = D.mat-W.mat
Spat.cov = cov2cor(chol2inv(chol(G.mat))) # spatial covariance matrix
v0 = 0.005
a1 = 5
a2 = 15
q = 1
Nmcmc = 210
burnin = 10
X.test = NULL
type='approx'
res = spTempBayes(y, X, c_init = rep(1, tau), beta_init = NULL,
zeta_init = NULL, nusq_init = NULL, l_init = NULL,
prior.mu = 0, Spat.cov, Temp.cov, v0, a1, a2, q,
Nmcmc, burnin, X.test = NULL, type)
library(scalableBayesEEG)
?spTempBayes
library(scalableBayesEEG)
?metropolis
use_readme_md('README')
X = scalableBayesEEG::X_eeg
ind64to57 = scalableBayesEEG::ind64to57_eeg
X = X[,ind64to57,]
y = t(scalableBayesEEG::y_eeg)
dist.mat = scalableBayesEEG::dist.mat
dist.mat = scalableBayesEEG::dist.mat_eeg
tau = dim(X)[1]
p = dim(X)[2]
n = dim(X)[3]
trn.ind = sample.int(n, size = 100)
y.trn = y[trn.ind] # responses from training data
y.test = y[-trn.ind] # responses from test data
X.trn = aperm(X[,,trn.ind], c(3,2,1)) # training EEG data
X.test = aperm(X[,,-trn.ind], c(3,2,1)) # test EEG data
prior.temp = matrix(0, nrow = tau, ncol = tau)
for(t1 in 1:tau) for(t2 in t1:tau){
if(t1 == t2) prior.temp[t1,t1] = 2
if(t2 == t1+1) prior.temp[t1,t2] = prior.temp[t2,t1] = -1
if(t1 == 1 & t2 == 1) prior.temp[t1,t1] = 1
if(t1 == tau & t2 == tau) prior.temp[t1,t1] = 1
}
T.mat = prior.temp+diag(0.6,tau)
Temp.cov = cov2cor(chol2inv(chol(T.mat))) # temporal covariance matrix
dmat = (dist.mat+t(dist.mat))/2
W.mat = exp(-(dmat^2)/0.1)
D.mat = diag(rowSums(W.mat)+0.6)
G.mat = D.mat-W.mat
Spat.cov = cov2cor(chol2inv(chol(G.mat))) # spatial covariance matrix
finalModel = spTempBayes(y, X.trn, c_init = rep(1, tau), beta_init = NULL,
zeta_init = NULL, nusq_init = NULL, l_init = NULL,
prior.mu = rep(0, p*tau), Spat.cov, Temp.cov,
v0 = 0.005, a1 = 5, a2 = 15, q = 1,
Nmcmc = 210, # takes about 200 seconds
burnin = 10, X.test = NULL, type='approx')
warnings()
finalModel = spTempBayes(y.trn, X.trn, c_init = rep(1, tau), beta_init = NULL,
zeta_init = NULL, nusq_init = NULL, l_init = NULL,
prior.mu = rep(0, p*tau), Spat.cov, Temp.cov,
v0 = 0.005, a1 = 5, a2 = 15, q = 1,
Nmcmc = 210, # takes about 200 seconds
burnin = 10, X.test = NULL, type='approx')
finalModel = spTempBayes(y.trn, X.trn, c_init = rep(1, tau), beta_init = NULL,
zeta_init = NULL, nusq_init = NULL, l_init = NULL,
prior.mu = rep(0, p*tau), Spat.cov, Temp.cov,
v0 = 0.005, a1 = 5, a2 = 15, q = 1,
Nmcmc = 210, # takes about 200 seconds
burnin = 10, X.test = X.test, type='approx')
library(scalableBayesEEG)
?spTempBayes
remove.packages(scalableBayesEEG)
remove.packages('scalableBayesEEG')
library(usethis)
use_vignette('Using_scalableBayesEEG')
library(scalableBayesEEG)
library(scalableBayesEEG)
library(scalableBayesEEG)
load("~/Fall 2018/Scalable BVS/scalableBayesEEG/.RData")
library(scalableBayesEEG)
